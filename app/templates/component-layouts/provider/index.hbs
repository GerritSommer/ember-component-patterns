{{!-- BEGIN-SNIPPET provider-js
export default class MyTableData extends Component<Args> {
  @cached
  get myDataLoader() {
    return this.store.fetchMyData();
  }

  get myData() {
    if (!this.myDataLoader.isSuccess) return this.myDataLoader.value;
  }

  get complexlyTransformedData() {
    return this.myData?.map((item)=> rocketScience(item));
  }
}
END-SNIPPET --}}

{{!-- BEGIN-SNIPPET provider-hbs
  {{yield this.complexlyTransformedData}}
END-SNIPPET --}}

{{!-- BEGIN-SNIPPET provider-good-hbs
<MyTableData as |data|>
  <MyTable @data={{data}} />
</MyTableData>
END-SNIPPET --}}

<h2>Provider component</h2>
<p>
  Extract computation or data loading logic into a component without markup.
</p>

<article>
  <section>
    <h3>How to use it</h3>
    <Highlight @name="provider-good-hbs" />
  </section>

  <section>
    <h3>How to do it</h3>
    <p>JS class</p>
    <Highlight @name="provider-js" @language="js" />
    <p>Template</p>
    <Highlight @name="provider-hbs" />
  </section>



  <section>
    <h3>When to use it</h3>
    <p>
      <ul>
        <li>Split up large components to data fetching, UI interaction and markup</li>
        <li>Prefer a <i>"fetch any entityy component"</i> over <i>"fetch only this entity type component"</i></li>
        <li>Reusability - If you move data fetching out the table can be used for local data as well</li>
      </ul>
    </p>
  </section>


</article>