{{!-- BEGIN-SNIPPET yielded-js
export default class MyTableData extends Component<Args> {
  @cached
  get myDataLoader() {
    return this.store.fetchMyData();
  }

  get myData() {
    if (!this.myDataLoader.isSuccess) return this.myDataLoader.value;
  }

  get failedData() {
    if (!this.myDataLoader.didFail) return this.myDataLoader.error;
  }

}
END-SNIPPET --}}

{{!-- BEGIN-SNIPPET yielded-hbs
  {{yield
    this.myDataLoader
    components=(hash
      success=(component "data/success" content=this.myData)
      error=(component "data/error" content=this.failedData)
    )
  }}
END-SNIPPET --}}

{{!-- BEGIN-SNIPPET yielded-good-hbs
<MyTableData as |loader components|>
  <components.success />
  <components.error />
</MyTableData>
END-SNIPPET --}}

<h2>Provider with yielded components</h2>
<p>
  Provide related components
</p>

<article>
  <section>
    <h3>How to do it</h3>
    <p>JS class</p>
    <Highlight @name="yielded-js" @language="js" />
    <p>Template</p>
    <Highlight @name="yielded-hbs" />
  </section>

  <section>
    <h3>How to use it</h3>
    <Highlight @name="yielded-good-hbs" />
  </section>

  <section>
    <h3>When to use it</h3>
    <p>
      <ul>
        <li>Can be helpful to supply some helper or utility components</li>
        <li>Has the same issues as <LinkTo @route="blocks.with-yielded-components">blocks with yielded components</LinkTo></li>
      </ul>
    </p>
  </section>


</article>